function [f, df] = negLogLikelihoodPi0ForGLDAFunc(x, Piz, dist_iu, log_dist_iu, n_topic, n_user,    n_doc_izu, n_doc_zu,   doc_topic,  tweet_location_index, tweet_user)

% This function returns the function value, partial derivatives
% of the (general dimension) log likelihood function with respect to Pr0.
%
% Author:	Bo Hu 2013-04-10
%
% Inputs -----------------------------------------------------------------
% x, Piz, n_topic, n_location, n_doc_iz, n_doc_z.
%
% Outputs ----------------------------------------------------------------
% f is function value, and df is partial derivative value.


%% function value
Pi0 = x;
f = 0;

%% derivative value
df = zeros(size(Pi0));

%% precomputation
[sum_iz, exp_sum_zu, log_exp_sum_zu] = deltaForAllTopicForGLDA(Pi0, Piz, dist_iu);
exp_sum_iz = exp(sum_iz);

%% compute function value f
% for z = 1:n_topic
%     for u = 1:n_user
%         f = f + n_doc_izu(:,z,u)' * (sum_iz(:,z) + log_dist_iu(:,u)) - n_doc_zu(z,u) * log_exp_sum_zu(z,u);
%     end
% end
n_doc = length(doc_topic);
for d = 1:n_doc
    u = tweet_user(d);
    i = tweet_location_index(d);
    z = doc_topic(d);
    f = f + sum_iz(i,z) + log_dist_iu(i,u) - log_exp_sum_zu(z,u);
end

%% compute derivative value of function df
% for z = 1:n_topic
%     for u = 1:n_user
%         df = df + n_doc_izu(:,z,u) - n_doc_zu(z,u) * exp_sum_iz(:,z) .* dist_iu(:,u) / exp_sum_zu(z,u);
%     end
% end

df_tmp_1 = zeros(2951,1); 
% for z = 1:n_topic
%      for u = 1:n_user         
% 		df_tmp_1 = df_tmp_1 - n_doc_zu(z,u) * exp_sum_iz(:,z) .* dist_iu(:,u) / exp_sum_zu(z,u) ;%+  n_doc_izu(:,z,u)  ;
%      end
% end

df_tmp_1 = df_tmp_1 - n_doc_zu(1,1) * exp_sum_iz(:,1) .* dist_iu(:,1) / exp_sum_zu(1,1) ;%+  n_doc_izu(:,z,u)  ;

df_tmp_2 = zeros(2951,1); 
n_doc = length(doc_topic);
count = 0;
for d = 1:n_doc
    u = tweet_user(d);
    i = tweet_location_index(d);
    z = doc_topic(d);
	if z == 1
	if u == 1
        count = count +1;
		df_tmp_2(i) = df_tmp_2(i) -  exp_sum_iz(i,z) * dist_iu(i,u) / exp_sum_zu(z,u);%+ 1 ;
	end
	end
end
% 
% n_doc = length(doc_topic);
% for d = 1:n_doc
%     u = tweet_user(d);
%     i = tweet_location_index(d);
%     z = doc_topic(d);
%     df(i) = df(i) + 1 -  exp_sum_iz(i,z) * dist_iu(i,u) / exp_sum_zu(z,u);
% end
    


%% negative
f = -f;
df = -df;

